{"version":3,"sources":["component/particles/index.js","App.js","serviceWorker.js","index.js","component/particles/Strategy.js","component/particles/index.module.scss"],"names":["Option","Select","requestId","Particles","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","particles","step","ctx","backgroundColor","r","g","b","a","layoutStrategy","moveStrategy","randomDelay","sizeRate","fontSize","canvas","refs","width","window","innerWidth","height","innerHeight","setState","getContext","strategy","layoutStrategies","value","moveStrategies","_this2","animateButton","react_default","createElement","es_button","onClick","show","moveOptions","map","item","index","key","id","name","layoutOptions","className","styles","container","operation","input","addonBefore","addonAfter","ref","es_select","defaultValue","onChange","moveStrategyChange","layoutStrategyChange","es_radio","Group","e","target","input_number","changeStep","slider","changeSizeRate","max","changeFontSize","newStrategy","find","s","console","log","text","_this$state$backgroun","fillStyle","concat","fillRect","font","gradient","createLinearGradient","addColorStop","fillText","fill","newParticles","_this$state","data","getImageData","i","j","k","_r$g$b$a","isBackgroundColor","push","objectSpread","targetX","targetY","style","delay","Math","random","_this3","_this$state2","clearRect","forEach","p","beginPath","radius","arc","x","y","PI","closePath","cancelAnimationFrame","drawOriginText","getParticles","animate","message","info","drawParticles","requestAnimationFrame","bind","Component","App","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","diffX","diffY","distance","sqrt","sin","cos","w","h","alt"],"mappings":"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","file":"static/js/main.172eef91.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, Input, message, Select, Radio, InputNumber, Slider } from 'antd';\r\nimport styles from './index.module.scss';\r\nimport strategy from './Strategy';\r\n\r\nconst { Option } = Select;\r\nlet requestId = null;\r\n\r\nclass Particles extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            particles: [],\r\n            step: 10,\r\n            ctx: null,\r\n            backgroundColor: {\r\n                r: 255,\r\n                g: 255,\r\n                b: 255,\r\n                a: 255\r\n            },\r\n            layoutStrategy: null,\r\n            moveStrategy: null,\r\n            randomDelay: true,\r\n            sizeRate: 80,\r\n            fontSize: 256\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        let canvas = this.refs.canvas;\r\n        canvas.width = window.innerWidth;\r\n        canvas.height = window.innerHeight;\r\n        this.setState({\r\n            ctx: canvas.getContext('2d'),\r\n            layoutStrategy: strategy.layoutStrategies[0].value,\r\n            moveStrategy: strategy.moveStrategies[0].value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const animateButton = (\r\n            <Button onClick={ () => this.show() }>draw</Button>\r\n        );\r\n\r\n        const moveOptions = strategy.moveStrategies.map((item, index) => {\r\n            return <Option key={index} value={item.id}>{ item.name }</Option>\r\n        });\r\n        const layoutOptions = strategy.layoutStrategies.map((item, index) => {\r\n            return <Option key={index} value={item.id}>{ item.name }</Option>\r\n        });\r\n\r\n        return (\r\n            <div className={styles.container}>\r\n                <div className={styles.operation}>\r\n                    <Input addonBefore=\"write something\" addonAfter={animateButton} ref=\"input\"></Input>\r\n                </div>\r\n                <div>\r\n                    <Select defaultValue=\"0\" onChange={ (value) => this.moveStrategyChange(value) }>\r\n                        { moveOptions }\r\n                    </Select>\r\n                    <Select defaultValue=\"0\" onChange={ (value) => this.layoutStrategyChange(value) }>\r\n                        { layoutOptions }\r\n                    </Select>\r\n                    随机延迟\r\n                    <Radio.Group defaultValue={true} onChange={ (e) => this.setState({randomDelay: e.target.value}) }>\r\n                        <Radio value={true}>√</Radio>\r\n                        <Radio value={false}>×</Radio>\r\n                    </Radio.Group>\r\n                    间隔：\r\n                    <InputNumber defaultValue={this.state.step} onChange={(value) => this.changeStep(value)}></InputNumber>\r\n                    <br/>\r\n                    粒子大小：\r\n                    <Slider defaultValue={this.state.sizeRate} onChange={(value) => this.changeSizeRate(value)}></Slider>\r\n                    字体大小：\r\n                    <Slider defaultValue={this.state.fontSize} max={512} onChange={(value) => this.changeFontSize(value)}></Slider>\r\n                </div>\r\n                <canvas ref=\"canvas\"></canvas>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    changeStep(value){\r\n        this.setState({\r\n            step: value\r\n        });\r\n    }\r\n\r\n    changeSizeRate(value){\r\n        this.setState({\r\n            sizeRate: value\r\n        });\r\n    }\r\n\r\n    changeFontSize(value){\r\n        this.setState({\r\n            fontSize: value\r\n        });\r\n    }\r\n\r\n    moveStrategyChange(id){\r\n        let newStrategy = strategy.moveStrategies.find(s => {\r\n            return s.id === id;\r\n        });\r\n        this.setState({\r\n            moveStrategy: newStrategy.value\r\n        })\r\n    }\r\n\r\n    layoutStrategyChange(id){\r\n        \r\n        let newStrategy = strategy.layoutStrategies.find(s => {\r\n            console.log(s)\r\n            return s.id === id;\r\n        });\r\n        this.setState({\r\n            layoutStrategy: newStrategy.value\r\n        })\r\n    }\r\n\r\n    drawOriginText(text) {\r\n        let canvas = this.refs.canvas;\r\n        let ctx = canvas.getContext('2d');\r\n        if(!ctx) return;\r\n        let {r, g, b, a} = this.state.backgroundColor;\r\n        ctx.fillStyle = `rgba(${r}, ${g}, ${b}, ${a})`;\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n        ctx.font = `bolder ${this.state.fontSize}px serif`;\r\n        var gradient = ctx.createLinearGradient(0, 0, canvas.width, 0);\r\n        gradient.addColorStop(\"0\", \"magenta\");\r\n        gradient.addColorStop(\"0.5\", \"blue\");\r\n        gradient.addColorStop(\"1.0\", \"red\");\r\n        ctx.fillStyle = gradient;\r\n        ctx.fillText(text, 50, 300);\r\n        ctx.fill();\r\n    }\r\n\r\n    getParticles() {\r\n        let newParticles = [], { ctx, step } = this.state, canvas = this.refs.canvas;\r\n        let { data } = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n\r\n        for (var i = 0; i < canvas.height; i += step) {\r\n            for (var j = 0; j < canvas.width; j += step) {\r\n                let k = (4 * canvas.width) * i + (4 * j);\r\n                let { r, g, b, a } = {\r\n                    r: data[k],\r\n                    g: data[k + 1],\r\n                    b: data[k + 2],\r\n                    a: data[k + 3]\r\n                }\r\n                if (!this.isBackgroundColor(r, g, b, a)) {\r\n                    newParticles.push({\r\n                        targetX: j,\r\n                        targetY: i,\r\n                        style: `rgba(${r}, ${g}, ${b}, ${a})`,\r\n                        delay: this.state.randomDelay ? Math.random() * 50 + 50 : 50,\r\n                        // retuen {x, y} stands for the start position\r\n                        ...this.state.layoutStrategy(canvas.width, canvas.height)\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        this.setState({\r\n            particles: newParticles\r\n        })\r\n    }\r\n\r\n    isBackgroundColor(r, g, b, a) {\r\n        let { backgroundColor } = this.state;\r\n        return backgroundColor.r === r &&\r\n            backgroundColor.g === g &&\r\n            backgroundColor.b === b &&\r\n            backgroundColor.a === a;\r\n    }\r\n\r\n    drawParticles() {\r\n        let { ctx, particles, step, sizeRate } = this.state, canvas = this.refs.canvas;\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        particles.forEach(p => {\r\n            this.state.moveStrategy(p);\r\n            ctx.beginPath();\r\n            ctx.fillStyle = p.style;\r\n            let radius = step * sizeRate / 100 / 2;\r\n            ctx.arc(p.x, p.y, radius, 0, Math.PI * 2);\r\n            ctx.fill();\r\n            ctx.closePath();\r\n        });\r\n    }\r\n\r\n    show() {\r\n        // if not, the animation speed will be more and more quick\r\n        if(requestId){\r\n            cancelAnimationFrame(requestId);\r\n        }\r\n        let text = this.refs.input.state.value;\r\n        if(!text){\r\n            message.info('you have not enter anything yet i_i');\r\n            return;\r\n        }\r\n        this.drawOriginText(text);\r\n        this.getParticles();\r\n        // drawParticles();\r\n        this.animate();\r\n    }\r\n\r\n    animate(){\r\n        this.drawParticles();\r\n        requestId = requestAnimationFrame(this.animate.bind(this));\r\n    }\r\n}\r\n\r\nexport default Particles;","import React from 'react';\n// import logo from './logo.svg'\nimport Particles from './component/particles';\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Particles></Particles>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","function linearMove(p) {\r\n    if (p.delay > 0)--p.delay;\r\n    else {\r\n        let step = .02;\r\n        p.x += (p.targetX - p.x) * step;\r\n        p.y += (p.targetY - p.y) * step;\r\n    }\r\n}\r\n\r\nfunction randomMove(p) {\r\n    if (p.delay > 0)--p.delay;\r\n    else {\r\n        let diffX = p.targetX - p.x;\r\n        let diffY = p.targetY - p.y;\r\n        let distance = Math.sqrt(diffX * diffX + diffY * diffY) * .99;\r\n        p.x = p.targetX + Math.sin(Math.random() * 2 * Math.PI) * distance;\r\n        p.y = p.targetY + Math.cos(Math.random() * 2 * Math.PI) * distance;\r\n    }\r\n}\r\n\r\nfunction randomLayout(w, h){\r\n    return {\r\n        x: Math.random() * w,\r\n        y: Math.random() * h\r\n    }\r\n}\r\n\r\nfunction pointLayout(w, h){\r\n    return {\r\n        x: 0,\r\n        y: 0\r\n    }\r\n}\r\n\r\nfunction aroundLayout(w, h){\r\n    // alt: true => top and bottom, false => left and right\r\n    let alt = Math.random() > .5;\r\n    return {\r\n        x: alt ? (Math.random() > .5 ? 5 : w - 20) : Math.random() * w,\r\n        y: !alt ? (Math.random() > .5 ? 5 : h - 20) : Math.random() * h\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    moveStrategies: [\r\n        {id: '0', name: 'linearMove', value: linearMove},\r\n        {id: '1', name: 'randomMove', value: randomMove}\r\n    ],\r\n    layoutStrategies: [\r\n        {id: '0', name: 'pointLayout', value: pointLayout},\r\n        {id: '1', name: 'randomLayout', value: randomLayout},\r\n        {id: '2', name: 'aroundLayout', value: aroundLayout}\r\n    ]\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"particles_container__3PBvW\",\"operation\":\"particles_operation__33WxJ\"};"],"sourceRoot":""}